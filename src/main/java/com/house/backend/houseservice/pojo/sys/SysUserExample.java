package com.house.backend.houseservice.pojo.sys;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class SysUserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public SysUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public SysUserExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public SysUserExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        SysUserExample example = new SysUserExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public SysUserExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public SysUserExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUidIsNull() {
            addCriterion("`UID` is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("`UID` is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(String value) {
            addCriterion("`UID` =", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUidEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`UID` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(String value) {
            addCriterion("`UID` <>", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUidNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`UID` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(String value) {
            addCriterion("`UID` >", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`UID` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(String value) {
            addCriterion("`UID` >=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`UID` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThan(String value) {
            addCriterion("`UID` <", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`UID` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(String value) {
            addCriterion("`UID` <=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`UID` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLike(String value) {
            addCriterion("`UID` like", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotLike(String value) {
            addCriterion("`UID` not like", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<String> values) {
            addCriterion("`UID` in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<String> values) {
            addCriterion("`UID` not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(String value1, String value2) {
            addCriterion("`UID` between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(String value1, String value2) {
            addCriterion("`UID` not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUnameIsNull() {
            addCriterion("UNAME is null");
            return (Criteria) this;
        }

        public Criteria andUnameIsNotNull() {
            addCriterion("UNAME is not null");
            return (Criteria) this;
        }

        public Criteria andUnameEqualTo(String value) {
            addCriterion("UNAME =", value, "uname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUnameEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UNAME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnameNotEqualTo(String value) {
            addCriterion("UNAME <>", value, "uname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUnameNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UNAME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnameGreaterThan(String value) {
            addCriterion("UNAME >", value, "uname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUnameGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UNAME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnameGreaterThanOrEqualTo(String value) {
            addCriterion("UNAME >=", value, "uname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUnameGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UNAME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnameLessThan(String value) {
            addCriterion("UNAME <", value, "uname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUnameLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UNAME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnameLessThanOrEqualTo(String value) {
            addCriterion("UNAME <=", value, "uname");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUnameLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UNAME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnameLike(String value) {
            addCriterion("UNAME like", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameNotLike(String value) {
            addCriterion("UNAME not like", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameIn(List<String> values) {
            addCriterion("UNAME in", values, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameNotIn(List<String> values) {
            addCriterion("UNAME not in", values, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameBetween(String value1, String value2) {
            addCriterion("UNAME between", value1, value2, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameNotBetween(String value1, String value2) {
            addCriterion("UNAME not between", value1, value2, "uname");
            return (Criteria) this;
        }

        public Criteria andNickIsNull() {
            addCriterion("NICK is null");
            return (Criteria) this;
        }

        public Criteria andNickIsNotNull() {
            addCriterion("NICK is not null");
            return (Criteria) this;
        }

        public Criteria andNickEqualTo(String value) {
            addCriterion("NICK =", value, "nick");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andNickEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("NICK = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNickNotEqualTo(String value) {
            addCriterion("NICK <>", value, "nick");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andNickNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("NICK <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNickGreaterThan(String value) {
            addCriterion("NICK >", value, "nick");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andNickGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("NICK > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNickGreaterThanOrEqualTo(String value) {
            addCriterion("NICK >=", value, "nick");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andNickGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("NICK >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNickLessThan(String value) {
            addCriterion("NICK <", value, "nick");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andNickLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("NICK < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNickLessThanOrEqualTo(String value) {
            addCriterion("NICK <=", value, "nick");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andNickLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("NICK <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNickLike(String value) {
            addCriterion("NICK like", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotLike(String value) {
            addCriterion("NICK not like", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickIn(List<String> values) {
            addCriterion("NICK in", values, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotIn(List<String> values) {
            addCriterion("NICK not in", values, "nick");
            return (Criteria) this;
        }

        public Criteria andNickBetween(String value1, String value2) {
            addCriterion("NICK between", value1, value2, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotBetween(String value1, String value2) {
            addCriterion("NICK not between", value1, value2, "nick");
            return (Criteria) this;
        }

        public Criteria andPwdIsNull() {
            addCriterion("PWD is null");
            return (Criteria) this;
        }

        public Criteria andPwdIsNotNull() {
            addCriterion("PWD is not null");
            return (Criteria) this;
        }

        public Criteria andPwdEqualTo(String value) {
            addCriterion("PWD =", value, "pwd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andPwdEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("PWD = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdNotEqualTo(String value) {
            addCriterion("PWD <>", value, "pwd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andPwdNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("PWD <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdGreaterThan(String value) {
            addCriterion("PWD >", value, "pwd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andPwdGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("PWD > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdGreaterThanOrEqualTo(String value) {
            addCriterion("PWD >=", value, "pwd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andPwdGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("PWD >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdLessThan(String value) {
            addCriterion("PWD <", value, "pwd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andPwdLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("PWD < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdLessThanOrEqualTo(String value) {
            addCriterion("PWD <=", value, "pwd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andPwdLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("PWD <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdLike(String value) {
            addCriterion("PWD like", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdNotLike(String value) {
            addCriterion("PWD not like", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdIn(List<String> values) {
            addCriterion("PWD in", values, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdNotIn(List<String> values) {
            addCriterion("PWD not in", values, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdBetween(String value1, String value2) {
            addCriterion("PWD between", value1, value2, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdNotBetween(String value1, String value2) {
            addCriterion("PWD not between", value1, value2, "pwd");
            return (Criteria) this;
        }

        public Criteria andSaltIsNull() {
            addCriterion("SALT is null");
            return (Criteria) this;
        }

        public Criteria andSaltIsNotNull() {
            addCriterion("SALT is not null");
            return (Criteria) this;
        }

        public Criteria andSaltEqualTo(String value) {
            addCriterion("SALT =", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andSaltEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("SALT = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltNotEqualTo(String value) {
            addCriterion("SALT <>", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andSaltNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("SALT <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThan(String value) {
            addCriterion("SALT >", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andSaltGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("SALT > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThanOrEqualTo(String value) {
            addCriterion("SALT >=", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andSaltGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("SALT >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltLessThan(String value) {
            addCriterion("SALT <", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andSaltLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("SALT < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltLessThanOrEqualTo(String value) {
            addCriterion("SALT <=", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andSaltLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("SALT <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltLike(String value) {
            addCriterion("SALT like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotLike(String value) {
            addCriterion("SALT not like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltIn(List<String> values) {
            addCriterion("SALT in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotIn(List<String> values) {
            addCriterion("SALT not in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltBetween(String value1, String value2) {
            addCriterion("SALT between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotBetween(String value1, String value2) {
            addCriterion("SALT not between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andLockIsNull() {
            addCriterion("`LOCK` is null");
            return (Criteria) this;
        }

        public Criteria andLockIsNotNull() {
            addCriterion("`LOCK` is not null");
            return (Criteria) this;
        }

        public Criteria andLockEqualTo(Boolean value) {
            addCriterion("`LOCK` =", value, "lock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andLockEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`LOCK` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLockNotEqualTo(Boolean value) {
            addCriterion("`LOCK` <>", value, "lock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andLockNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`LOCK` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLockGreaterThan(Boolean value) {
            addCriterion("`LOCK` >", value, "lock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andLockGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`LOCK` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLockGreaterThanOrEqualTo(Boolean value) {
            addCriterion("`LOCK` >=", value, "lock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andLockGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`LOCK` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLockLessThan(Boolean value) {
            addCriterion("`LOCK` <", value, "lock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andLockLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`LOCK` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLockLessThanOrEqualTo(Boolean value) {
            addCriterion("`LOCK` <=", value, "lock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andLockLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("`LOCK` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLockIn(List<Boolean> values) {
            addCriterion("`LOCK` in", values, "lock");
            return (Criteria) this;
        }

        public Criteria andLockNotIn(List<Boolean> values) {
            addCriterion("`LOCK` not in", values, "lock");
            return (Criteria) this;
        }

        public Criteria andLockBetween(Boolean value1, Boolean value2) {
            addCriterion("`LOCK` between", value1, value2, "lock");
            return (Criteria) this;
        }

        public Criteria andLockNotBetween(Boolean value1, Boolean value2) {
            addCriterion("`LOCK` not between", value1, value2, "lock");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("CREATED is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("CREATED is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(LocalDateTime value) {
            addCriterion("CREATED =", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andCreatedEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("CREATED = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(LocalDateTime value) {
            addCriterion("CREATED <>", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andCreatedNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("CREATED <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(LocalDateTime value) {
            addCriterion("CREATED >", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andCreatedGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("CREATED > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("CREATED >=", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andCreatedGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("CREATED >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(LocalDateTime value) {
            addCriterion("CREATED <", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andCreatedLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("CREATED < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("CREATED <=", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andCreatedLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("CREATED <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<LocalDateTime> values) {
            addCriterion("CREATED in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<LocalDateTime> values) {
            addCriterion("CREATED not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("CREATED between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("CREATED not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNull() {
            addCriterion("UPDATED is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNotNull() {
            addCriterion("UPDATED is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedEqualTo(LocalDateTime value) {
            addCriterion("UPDATED =", value, "updated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUpdatedEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UPDATED = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedNotEqualTo(LocalDateTime value) {
            addCriterion("UPDATED <>", value, "updated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUpdatedNotEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UPDATED <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThan(LocalDateTime value) {
            addCriterion("UPDATED >", value, "updated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUpdatedGreaterThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UPDATED > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("UPDATED >=", value, "updated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUpdatedGreaterThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UPDATED >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThan(LocalDateTime value) {
            addCriterion("UPDATED <", value, "updated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUpdatedLessThanColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UPDATED < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("UPDATED <=", value, "updated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria andUpdatedLessThanOrEqualToColumn(SysUser.Column column) {
            addCriterion(new StringBuilder("UPDATED <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedIn(List<LocalDateTime> values) {
            addCriterion("UPDATED in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotIn(List<LocalDateTime> values) {
            addCriterion("UPDATED not in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("UPDATED between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("UPDATED not between", value1, value2, "updated");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS_USER
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        private SysUserExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        protected Criteria(SysUserExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public SysUserExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table SYS_USER
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS_USER
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table SYS_USER
         *
         * @mbg.generated
         */
        void example(com.house.backend.houseservice.pojo.sys.SysUserExample example);
    }
}